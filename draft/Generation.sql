DROP PROCEDURE INSERT_FLIGHT;
DROP VIEW COLUMNS;
DROP VIEW ALLOWED;
DROP VIEW PLACES;
DROP VIEW FLIGHT_SCHEDULE;
DROP VIEW PLACE;
DROP TABLE FLIGHT_ARCHIVE;
DROP TABLE PASSENGERS;
DROP TABLE FLIGHT;
DROP TABLE CITY;
DROP TABLE COUNTRY;
DROP TABLE AIRPLANE_PLACES;
DROP TABLE PLACE_TYPE;
DROP TABLE AIRPLANE;

CREATE TABLE COUNTRY (
    ID NUMBER GENERATED BY DEFAULT AS IDENTITY,
    NAME VARCHAR2(100) NOT NULL,

    PRIMARY KEY(ID)
);

CREATE TABLE CITY (
    ID NUMBER GENERATED BY DEFAULT AS IDENTITY,
    COUNTRY_ID NUMBER NOT NULL REFERENCES COUNTRY(ID),
    NAME VARCHAR2(100) NOT NULL,

    PRIMARY KEY(ID)
);

CREATE TABLE AIRPLANE (
    ID NUMBER GENERATED BY DEFAULT AS IDENTITY,
    NAME VARCHAR2(100),

    PRIMARY KEY(ID)
);

CREATE TABLE PLACE_TYPE (
    ID NUMBER GENERATED BY DEFAULT AS IDENTITY,
    NAME VARCHAR2(100),

    PRIMARY KEY(ID)
);

CREATE TABLE AIRPLANE_PLACES (
    AIRPLANE_ID NUMBER NOT NULL REFERENCES AIRPLANE(ID),
    PLACE_TYPE_ID NUMBER NOT NULL REFERENCES PLACE_TYPE(ID),
    PLACE VARCHAR2(50)
);

CREATE TABLE FLIGHT (
    FLIGHT_NUMBER VARCHAR2(50) NOT NULL,
    AIRPLANE_ID NUMBER NOT NULL REFERENCES AIRPLANE(ID),
    DEPARTURE_ID NUMBER NOT NULL REFERENCES CITY(ID),
    ARRIVAL_ID NUMBER NOT NULL REFERENCES CITY(ID),
    DEPARTURE_DATE DATE NOT NULL,
    DEPARTURE_TIME VARCHAR2(50) NOT NULL,
    FLIGHT_TIME NUMBER,
    TICKET_PRICE NUMBER NOT NULL,

    PRIMARY KEY(FLIGHT_NUMBER)
);

CREATE TABLE PASSENGERS (
    ID NUMBER GENERATED BY DEFAULT AS IDENTITY,
    SURNAME VARCHAR2(100),
    NAME VARCHAR2(100),
    PATRONYMIC VARCHAR2(100),
    DOCUMENT_NUMBER VARCHAR2(50) NOT NULL,
    DOCUMENT_SERIES VARCHAR2(50),
    FLIGHT_NUMBER VARCHAR(50) NOT NULL REFERENCES FLIGHT(FLIGHT_NUMBER),
    DEPARTURE_DATE DATE,
    PLACE VARCHAR2(50),

    PRIMARY KEY(ID)
);

CREATE TABLE FLIGHT_ARCHIVE (
    ID NUMBER GENERATED BY DEFAULT AS IDENTITY,
    VALUE XMLTYPE NOT NULL,

    PRIMARY KEY(ID)
);

CREATE VIEW PLACE
AS SELECT
    COUNTRY.ID AS COUNTRY_ID,
    COUNTRY.NAME AS COUNTRY,
    CITY.ID AS CITY_ID,
    CITY.NAME AS CITY
FROM CITY
INNER JOIN COUNTRY
ON CITY.COUNTRY_ID = COUNTRY.ID;

CREATE VIEW FLIGHT_SCHEDULE
AS SELECT
    FLIGHT.FLIGHT_NUMBER,
    AIRPLANE.NAME,
    P1.COUNTRY AS DEPARTURE_COUNTRY,
    P1.CITY AS DEPARTURE_CITY,
    P2.COUNTRY AS ARRIVAL_COUNTRY,
    P2.CITY AS ARRIVAL_CITY,
    FLIGHT.DEPARTURE_DATE,
    FLIGHT.DEPARTURE_TIME,
    FLIGHT.FLIGHT_TIME,
    FLIGHT.TICKET_PRICE
FROM FLIGHT
INNER JOIN AIRPLANE
ON FLIGHT.AIRPLANE_ID = AIRPLANE.ID
INNER JOIN PLACE P1
ON FLIGHT.DEPARTURE_ID = P1.CITY_ID
INNER JOIN PLACE P2
ON FLIGHT.ARRIVAL_ID = P2.CITY_ID;

CREATE VIEW PLACES
AS SELECT
    FLIGHT.FLIGHT_NUMBER,
    FLIGHT.DEPARTURE_DATE,
    FLIGHT.DEPARTURE_TIME,
    (
        SELECT COUNT(*)
        FROM AIRPLANE_PLACES
        WHERE AIRPLANE_PLACES.AIRPLANE_ID = FLIGHT.AIRPLANE_ID
        GROUP BY AIRPLANE_PLACES.AIRPLANE_ID
    ) AS TOTAL_PLACES,
    (
        SELECT COUNT(*)
        FROM AIRPLANE_PLACES
        WHERE AIRPLANE_PLACES.AIRPLANE_ID = FLIGHT.AIRPLANE_ID AND AIRPLANE_PLACES.PLACE NOT IN (
            SELECT PLACE
            FROM PASSENGERS
            WHERE PASSENGERS.FLIGHT_NUMBER = FLIGHT.FLIGHT_NUMBER
        )
        GROUP BY AIRPLANE_PLACES.AIRPLANE_ID
    ) AS FREE_PLACES
FROM FLIGHT;

CREATE VIEW ALLOWED
AS SELECT
    TABLE_NAME,
    SELECT_PRIV,
    INSERT_PRIV,
    DELETE_PRIV,
    UPDATE_PRIV
FROM TABLE_PRIVILEGES
WHERE GRANTEE = USER OR GRANTEE = 'MINIMAL'
ORDER BY TABLE_NAME;

CREATE VIEW COLUMNS
AS SELECT
    TABLE_NAME,
    COLUMN_NAME,
    DATA_TYPE,
    DATA_LENGTH
FROM ALL_TAB_COLUMNS
WHERE TABLE_NAME IN (SELECT TABLE_NAME FROM SYS.ALLOWED);

CREATE PROCEDURE INSERT_FLIGHT (
    V_FLIGHT_NUMBER IN VARCHAR2,
    V_AIRPLANE_ID IN NUMBER,
    V_DEPARTURE_ID IN NUMBER,
    V_ARRIVAL_ID IN NUMBER,
    V_DEPARTURE_DATE IN DATE,
    V_DEPARTURE_TIME IN VARCHAR2,
    V_FLIGHT_TIME IN NUMBER,
    V_TICKET_PRICE IN NUMBER
)
IS
    XML_VALUE XMLTYPE;

    CURSOR CURSOR_1
    IS SELECT XMLELEMENT("FLIGHT", XMLFOREST(
        FLIGHT_NUMBER,
        AIRPLANE_ID,
        DEPARTURE_ID,
        ARRIVAL_ID,
        DEPARTURE_DATE,
        DEPARTURE_TIME,
        FLIGHT_TIME,
        TICKET_PRICE
    ))
    FROM FLIGHT
    WHERE FLIGHT_NUMBER = V_FLIGHT_NUMBER;
BEGIN
    SAVEPOINT SAVE_POINT;

    OPEN CURSOR_1;
    FETCH CURSOR_1 INTO XML_VALUE;

    IF XML_VALUE IS NOT NULL THEN
        INSERT INTO FLIGHT_ARCHIVE (VALUE) VALUES (XML_VALUE);
        DELETE FROM FLIGHT WHERE FLIGHT_NUMBER = V_FLIGHT_NUMBER;
    END IF;

    INSERT INTO FLIGHT (
        FLIGHT_NUMBER,
        AIRPLANE_ID,
        DEPARTURE_ID,
        ARRIVAL_ID,
        DEPARTURE_DATE,
        DEPARTURE_TIME,
        FLIGHT_TIME,
        TICKET_PRICE
    ) VALUES (
        V_FLIGHT_NUMBER,
        V_AIRPLANE_ID,
        V_DEPARTURE_ID,
        V_ARRIVAL_ID,
        V_DEPARTURE_DATE,
        V_DEPARTURE_TIME,
        V_FLIGHT_TIME,
        V_TICKET_PRICE
    );
EXCEPTION
    WHEN OTHERS THEN
        ROLLBACK TO SAVE_POINT;
    RAISE;
END;